name:                my-neural-nets
version:             0.0.0.0
synopsis:            Neural network library in Haskell
description:         Please see the README on GitHub at <https://github.com/Nickske666/my-neural-nets#readme>
category:            Data science
github:              "NickVdB/my-neural-nets"
license:             BSD3
author:              "Nick Van den Broeck"
maintainer:          nick.van.den.broeck@hotmail.com
copyright:           "2018 Nick Van den Broeck"

extra-source-files:
- README.md

dependencies:
- base >= 4.7 && < 5
- hmatrix >= 0.19
- random
- singletons
- validity >= 0.4.0.4
- vector

library:
  source-dirs: src
  ghc-options: -Wall
  default-extensions:
  - NoImplicitPrelude
  exposed-modules:
  - Import
  - Neural
  - Neural.Core.Shape
  - Neural.Core.LinearAlgebra
  - Neural.Core.LinearAlgebra.Internal
  - Neural.Core.Layer
  - Neural.Core.Network
  - Neural.Core.HyperParams
  - Neural.Core.HyperParams.Internal
  - Neural.Layers
  - Neural.Layers.FullyConnected
  - Neural.Layers.Reshape
  - Neural.Layers.Sigmoid
  - Neural.Utils.PositiveDouble
  - Neural.Utils.PositiveDouble.Internal
  - Neural.Utils.ProperFraction
  - Neural.Utils.ProperFraction.Internal
  - Neural.Utils.Proxy
  - Neural.CreateRandom
  - Neural.ParamOpt.DataSet

executables:
  my-neural-nets-exe:
    main:                Main.hs
    source-dirs:         app
    ghc-options:
    - -Wall
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - my-neural-nets

tests:
  my-neural-nets-test:
    main:                Spec.hs
    source-dirs:         test
    default-extensions:
    - NoImplicitPrelude
    ghc-options:
    - -Wall
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - hspec
    - genvalidity >= 0.4.0.4
    - genvalidity-hspec >= 0.5
    - QuickCheck >= 2.11
    - my-neural-nets
    other-modules:
    - TestImport
    - TestUtils
    - Test.Neural.Core.Gen
    - Test.Neural.Core.InstanceSpec
    - Test.Neural.Core.LinearAlgebraGen
    - Test.Neural.Core.LinearAlgebraSpec
    - Test.Neural.Utils.Gen
    - Test.Neural.Utils.InstanceSpec
    - Test.Neural.Spec.CreateRandom
    - Test.Neural.Spec.Layer
    - Test.Neural.Spec.Gen
    - Test.Neural.Layers.FullyConnected
    - Test.Neural.Layers.Reshape
    - Test.Neural.Layers.Sigmoid
    - Test.Neural.Layers.LayerSpec
    - Test.Neural.Layers.Gen
